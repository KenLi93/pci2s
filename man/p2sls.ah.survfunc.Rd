% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/p2sls.ah.survfunc.R
\name{p2sls.ah.survfunc}
\alias{p2sls.ah.survfunc}
\title{Calculative the counterfactual marginal survival curve for proximal two-stage-least-squares with survival outcome}
\usage{
p2sls.ah.survfunc(
  Y,
  D,
  A,
  a,
  X = NULL,
  W,
  Z = NULL,
  Xw = NULL,
  Xy = NULL,
  nco_type = NULL,
  nco_args = NULL,
  surv_correct = T,
  tmax = NULL,
  nt = 1000
)
}
\arguments{
\item{Y}{an n-vector of observed time to event outcomes}

\item{D}{an n-vector of event indicators for Y}

\item{A}{an n-vector of primary exposure}

\item{a}{a unidimensional scalar value to fix A=a for calculating the counterfactual survival curve}

\item{X}{an n * nX matrix of adjusted covariates , can be empty}

\item{W}{an n * nW matrix of negative control outcome (NCO)}

\item{Z}{an n * nZ matrix of negative control exposure (NCE). Alternatively,
the NCE can be included in the design matrix of the first-stage model by specifying
Xw}

\item{Xw}{a matrix with n rows or a list of length nW, each element is a design matrix of
the corresponding NCO. Default is a matrix with columns of A, Z, X, and interactions between
A, Z and A, X}

\item{Xy}{a matrix with n rows, covariates to be adjusted for in the second-stage
model besides A and predictors for W. This may include interaction between A and columns of X.
Default to be X}

\item{nco_type}{An nW-vector for the types of models used in the first-stage, including
"linear" (linear model), "loglin" (log-linear model), "poisson" (Poisson regression model),
"negbin" (negative-binomial regression model), and "ah" (Lin \& Ying's additive hazards model)}

\item{nco_args}{A list of length nW containing additional arguments for the first-stage models.
Each element in the list is a sublist and should contain a vector named "offset" (default 0).
If nco_type == "ah", the sublist needs to include another vector named "event" as the event indicator
(default 1). If nco_type == "negbin", the sublist needs to include a vector "init" as the initial values,
which can be NA.}

\item{surv_correct}{logical, whether the survival function will be corrected post hoc to be non-increasing and
fall between 0 and 1, default to be TRUE.}

\item{tmax}{The maximal time to calculate the counterfactual marginal survival functions. Default to be the 
maximal event time multiplied by 1.05;}

\item{nt}{Number of time points to evaluate the survival functions, evenly distributed between 0 and tmax.}
}
\value{
A data frame with two columns: t: time points where the counterfactual marginal survival functions are evaluated; 
survfunc: value of the counterfactual marginal survival function
}
\description{
This function computes the counterfactual marginal survival curve for the proximal 
two-stage-least-squares with survival outcome
}
\examples{
N <- 2000
U <- runif(N); X <- runif(N)
expit  <-  function(x) exp(x)/(1 + exp(x))
A <- rbinom(N, 1, expit(-3 + 5 * U + 1 * X))
Y <- rexp(N, 0.5 * U + 0.2 * X + 0.2 * A)
D <- as.numeric(Y < 4)
Y[D == 0] <- 4
Z <- rnorm(N, 2 * U + 0.5 * X)
W2 <- rexp(N, 0.1 + 1 * U + 0.1 * X)
D2 <- as.numeric(W2 < 4)
W2[D2 == 0] <- 4
W <- cbind(W1 = rnbinom(N, size = 25, mu = exp(2.5 * U + 0.2 * X)),
           W2)
## Obtain the counterfactual marginal survival curves under a = 0, 1

p2sls_survfunc_a1 <- p2sls.ah.survfunc(Y = Y, D = D, A = A, a = 1, X = X,
       W = W, Z = Z, nco_type = c("negbin", "ah"),
       nco_args = list(list(offset = rep(0, N)),
                       list(offset = rep(0, N),
                            event = D2)))

p2sls_survfunc_a0 <- p2sls.ah.survfunc(Y = Y, D = D, A = A, a = 0, X = X,
       W = W, Z = Z, nco_type = c("negbin", "ah"),
       nco_args = list(list(offset = rep(0, N)),
                       list(offset = rep(0, N),
                            event = D2)))

## Plot the counterfactual marginal survival functions
plot(survfunc ~ t, data = p2sls_survfunc_a0, type = "l", lwd = 2,
    xlab = "Time", ylim = c(0, 1), ylab = "Survival function")
lines(survfunc ~ t, data = p2sls_survfunc_a1, lwd = 2, col = "red") 
legend("topright", legend = c("a = 0", "a = 1"), lwd = 2,
      col = c("black", "red"))
}
